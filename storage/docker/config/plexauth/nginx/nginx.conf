ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

#Upstream to Plex
upstream plex_backend {
    server plex:32400;
    keepalive 32;
}

server {

        listen 443 ssl http2;
        server_name youservername.com; #CHANGE THIS TO YOUR DOMAIN

        ssl_certificate     /ssl.crt; #CHANGE THIS
        ssl_certificate_key /ssl.key; #CHANGE THIS

	resolver 8.8.4.4 8.8.8.8 valid=300s;
	resolver_timeout 10s;

        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

	#ssl_stapling on;
	#ssl_stapling_verify on;
	ssl_session_tickets off;
	ssl_dhparam /dhparam.pem;
	ssl_ecdh_curve secp384r1;

	#Will ensure https is always used by supported browsers which prevents any server-side http > https redirects, as the browser will internally correct any request to https.
	#Recommended to submit to your domain to https://hstspreload.org as well.
	#!WARNING! Only enable this if you intend to only serve Plex over https, until this rule expires in your browser it WONT BE POSSIBLE to access Plex via http, remove 'includeSubDomains;' if you only want it to effect your Plex (sub-)domain.
	#This is disabled by default as it could cause issues with some playback devices it's advisable to test it with a small max-age and only enable if you don't encounter issues. (Haven't encountered any yet)
	#add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

	gzip on;
	gzip_vary on;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
	gzip_disable "MSIE [1-6]\.";

	client_max_body_size 100M;

	#Forward real ip and host to Plex
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;

	#Websockets
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";

	#Buffering off send to the client as soon as the data is received from Plex.
	proxy_redirect off;
	proxy_buffering off;

        error_log /var/log/nginx-www-error.log info;
        access_log /var/log/nginx-www-access.log;

	root /usr/share/nginx/html/;

        set $return $request_uri;
        set $return_host $host;
        #auth_request /auth/; #THIS IS WHAT REQUESTS THE AUTH.
		#If you want to only request auth for some subs move the line into the sub.

        error_page 401 = @error401;
        location @error401 {
            add_header 'X-AfterAuth' 'test';
            add_header X-Original-URI $request_uri;
            if ($return != false) {
                rewrite ^ https://yourservername.com/plexauth?return=$return_host$return redirect; #Edit this line
            }
            return 302 https://yourservername.com; #Edit this line
        }

        error_page 403 = @error403;
        location @error403 {
            return 302 https://youservername.com/access_denied.html; #edit this line.
        }

	location / {
		proxy_pass http://plex_backend;
	}

        location /admin_auth/ {
            proxy_pass http://localhost:8087/auth/index.php?admin=true&uri=$return;
            proxy_pass_request_body off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Content-Length '0';
        }

        location /auth/ {
            proxy_pass http://localhost:8087/auth/;
            proxy_pass_request_body off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Content-Length '0';
        }
		
	location /nzbget {
            auth_request /admin_auth/; 
            proxy_pass http://nzbget:6789/nzbget;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /radarr {
            auth_request /admin_auth/; 
            proxy_pass http://radarr:7878/radarr;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /nzbhydra {
            auth_request /admin_auth/; 
            proxy_pass http://nzbhydra:5075/nzbhydra;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /sonarr {
            auth_request /admin_auth/; 
            proxy_pass http://sonarr:8989/sonarr;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /plexpy {
            auth_request /admin_auth/; 
            proxy_pass http://plexpy:8181/plexpy;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Host $server_name;
        }

	location /webtools {
            proxy_pass http://plex:33400;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /request {
            auth_request /auth/; 
            proxy_pass http://ombi:3579/request;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /spotweb {
            auth_request /auth/;
            proxy_pass http://spotweb/spotweb;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /portainer/ {
            auth_request /admin_auth/; 
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass http://portainer:9000/;
        }
        location /portainer/api/websocket/ {
            auth_request /admin_auth/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_pass http://portainer:9000/api/websocket/;
        }

        location /plexauth {
            index index.php;
            root /usr/share/nginx/html/;
            location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php7-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
            }
        }
}


server {
    server_name = localhost;

    listen 127.0.0.1:8087;
    error_log /var/log/nginx-auth-error.log info;

    root /usr/share/nginx/html/plexauth/; #PATH TO PLEXAUTH
    index index.php index.html;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php7-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

}
